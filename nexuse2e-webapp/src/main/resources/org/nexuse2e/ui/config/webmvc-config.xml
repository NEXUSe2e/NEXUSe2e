<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
        
  <!-- Web MVC controllers -->
  <context:component-scan base-package="org.nexuse2e.ui.controller" use-default-filters="false">
    <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
  </context:component-scan>
  
  <!-- Web MVC resolvers -->
  <context:component-scan base-package="org.nexuse2e.ui.resolver" use-default-filters="true">
  </context:component-scan>
  
  <!-- Turns on support for mapping requests to Spring MVC @Controller methods
       Also registers default Formatters and Validators for use across all @Controllers -->
  <mvc:annotation-driven conversion-service="applicationConversionService">
      <mvc:argument-resolvers>
          <bean class="org.nexuse2e.ui.resolver.EngineConfigurationResolver"/>
      </mvc:argument-resolvers>
  </mvc:annotation-driven>
  
  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
<!--   <mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/> -->
  
  <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
  <mvc:default-servlet-handler/>
  
  <!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
  <mvc:interceptors>
    <bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang"/>
  </mvc:interceptors>
  
  <!-- Resolves localized *.properties files in the application to allow for internationalization. -->
  <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" p:basenames="classpath:/ApplicationResources" p:fallbackToSystemLocale="false"/>
  
  <!-- store preferred language configuration in a cookie -->
  <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale"/> 
  
  <!-- resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
  <bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>
  
  <!-- store preferred theme configuration in a cookie -->
  <bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>

  <!-- allows for integration of file upload functionality -->
  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>
  <bean class="org.nexuse2e.ui.resolver.DelegatingViewResolver">
    <property name="tilesResolver">
      <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
      </bean>
    </property>
    <property name="jspResolver">
      <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
      </bean>
    </property>
  </bean>
  <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
    <property name="definitions">
      <list>
        <value>classpath:/org/nexuse2e/ui/config/tiles-defs.xml</value>
      </list>
    </property>
  </bean>
  <bean class="org.nexuse2e.ui.ApplicationConversionServiceFactoryBean" id="applicationConversionService"/>
</beans>
