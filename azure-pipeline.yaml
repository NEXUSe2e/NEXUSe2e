name: $(BuildID)
pr: none
trigger:
  batch: false
  branches:
    include:
      - '*'
  tags:
    include:
      - 'v*'

stages:
  - stage: build
    displayName: 'Build'
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - powershell: |
              # Get version from webapp pom and add 'v' prefix
              [xml]$webappPomXml = Get-Content ./nexuse2e-webapp/pom.xml
              $webappVersion = "v$($webappPomXml.project.version)"              
              Write-Host "##vso[task.setvariable variable=webappPomVersion;isOutput=true]$($webappVersion)"
              
              # Get version from core pom and add 'v' prefix
              [xml]$corePomXml = Get-Content ./nexuse2e-core/pom.xml
              $coreVersion = "v$($corePomXml.project.version)"
              
              # Get branch name 
              $names = "$(Build.SourceBranch)".Split('/')
              $branchName = $($names[$names.length - 1])
              
              # Compare branch name to pom versions
              echo "Comparing branch name '$($branchName)' and webapp pom version (with 'v' prefix) '$($webappVersion)'"
              $webAppVersionsMatch = "$($branchName)".Equals("$($webappVersion)")
              echo "Webapp pom version matches tag: $($webAppVersionsMatch)"
              
              echo "Comparing branch name '$($branchName)' and core pom version (with 'v' prefix) '$($coreVersion)'"
              $coreVersionsMatch = "$($branchName)".Equals("$($coreVersion)")
              echo "Core pom version matches tag: $($coreVersionsMatch)"
              
              $versionsMatch = $webAppVersionsMatch -and $coreVersionsMatch
              echo "All pom versions match tag: $($versionsMatch)"
              
              # Set versionTagMatches variable
              Write-Host "##vso[task.setvariable variable=versionTagMatches;isOutput=true]$($versionsMatch)"
            displayName: Check Version
            name: checkVersion
          - task: Maven@3
            name: Install_Parent
            inputs:
              mavenPomFile: ./nexuse2e-parent/pom.xml
              goals: clean install
              options: >
                -B -e --no-transfer-progress
              publishJUnitResults: false
              javaHomeOption: JDKVersion
              jdkVersionOption: 1.11
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx3072m'
              mavenAuthenticateFeed: true
          - task: CopyFiles@2
            displayName: 'Copying Parent pom'
            inputs:
              SourceFolder: '$(build.sourcesdirectory)'
              Contents: 'nexuse2e-parent/pom.xml'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/parent'
              flattenFolders: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Parent Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/parent'
              ArtifactName: 'parent'
              publishLocation: 'Container'
          - task: Maven@3
            displayName: 'Maven Build Core'
            inputs:
              mavenPomFile: ./nexuse2e-core/pom.xml
              goals: clean install
              options: >
                -B -e --no-transfer-progress
              publishJUnitResults: false
              javaHomeOption: JDKVersion
              jdkVersionOption: 1.11
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx3072m'
              mavenAuthenticateFeed: true
          - task: CopyFiles@2
            displayName: 'Copying Core jar file'
            inputs:
              SourceFolder: '$(build.sourcesdirectory)'
              Contents: 'nexuse2e-core/target/*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/core'
              flattenFolders: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Core Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/core'
              ArtifactName: 'core'
              publishLocation: 'Container'
          - task: Maven@3
            displayName: 'Maven Build WebApp'
            inputs:
              mavenPomFile: ./nexuse2e-webapp/pom.xml
              goals: clean verify
              options: >
                -B -e -P with-new-frontend --no-transfer-progress
              publishJUnitResults: false
              javaHomeOption: JDKVersion
              jdkVersionOption: 1.11
              jdkArchitectureOption: 'x64'
              mavenOptions: '-Xmx3072m'
              mavenAuthenticateFeed: true
          - task: CopyFiles@2
            displayName: 'Copying Webapp war file'
            inputs:
              SourceFolder: '$(build.sourcesdirectory)'
              Contents: 'nexuse2e-webapp/target/*.war'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/webapp'
              flattenFolders: true
          - task: CopyFiles@2
            displayName: 'Copying Webapp pom'
            inputs:
              SourceFolder: '$(build.sourcesdirectory)'
              Contents: 'nexuse2e-webapp/pom.xml'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/webapp'
              flattenFolders: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Webapp Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/webapp'
              ArtifactName: 'webapp'
              publishLocation: 'Container'
  - stage: github
    displayName: Github Release
    dependsOn: build
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags/'))
    variables:
      - name: versionTagMatches
        value: $[ stageDependencies.build.Build.outputs['checkVersion.versionTagMatches'] ]
    jobs:
      - deployment: 'Release'
        pool:
          vmImage: ubuntu-latest
        environment: 'NEXUSe2e-Github'
        strategy:
          runOnce:
            deploy:
              steps:
                - powershell: |
                    echo "Version matches tag: $(versionTagMatches)"
                    if ("$(versionTagMatches)".Equals("False")) {
                      Write-Error "Pom versions do not match tag!"
                    }
                  displayName: Check Version
                  name: checkVersion
                - task: DownloadBuildArtifacts@0
                  displayName: 'Download Webapp Artifacts'
                  inputs:
                    artifactName: webapp
                    itemPattern: 'webapp/**'
                    downloadPath: '$(Build.ArtifactStagingDirectory)'
                - task: GitHubRelease@1
                  displayName: 'GitHub Release (Draft)'
                  inputs:
                    gitHubConnection: 'NEXUSe2e_Github'
                    assets: '$(Build.ArtifactStagingDirectory)/webapp/*.war'
                    isDraft: true
                    tagSource : 'gitTag'
  - stage: feed
    displayName: Devops Feed Deployment
    dependsOn: build
    condition: succeeded()
    variables:
      - name: webappPomVersion
        value: $[ stageDependencies.build.Build.outputs['checkVersion.webappPomVersion'] ]
      - name: versionTagMatches
        value: $[ stageDependencies.build.Build.outputs['checkVersion.versionTagMatches'] ]
    jobs:
      - deployment: 'Deployment'
        pool:
          vmImage: ubuntu-latest
        environment: 'NEXUSe2e-Devops-Feed'
        strategy:
          runOnce:
            deploy:
              steps:
                - powershell: |
                    echo "Webapp version: $(webappPomVersion)"
                    echo "Version matches tag: $(versionTagMatches)"
                    if ("$(versionTagMatches)".Equals("False")) {
                      echo "Pom versions do not match tag!"
                    }
                  displayName: Check Version
                  name: checkVersion
                - task: DownloadBuildArtifacts@0
                  displayName: 'Download Parent pom'
                  inputs:
                    artifactName: webapp
                    itemPattern: 'parent/pom.xml'
                    downloadPath: '$(Build.ArtifactStagingDirectory)'
                - task: Maven@3
                  name: Install_Parent
                  inputs:
                    mavenPomFile: '$(Build.ArtifactStagingDirectory)/parent/pom.xml'
                    goals: clean install
                    options: >
                      -B -e --no-transfer-progress
                    publishJUnitResults: false
                    javaHomeOption: JDKVersion
                    jdkVersionOption: 1.11
                    jdkArchitectureOption: 'x64'
                    mavenOptions: '-Xmx3072m'
                    mavenAuthenticateFeed: true
                - task: DownloadBuildArtifacts@0
                  displayName: 'Download Webapp pom'
                  inputs:
                    artifactName: webapp
                    itemPattern: 'webapp/pom.xml'
                    downloadPath: '$(Build.ArtifactStagingDirectory)'
                - task: Maven@3
                  displayName: 'Maven Deploy WebApp'
                  inputs:
                    mavenPomFile: '$(Build.ArtifactStagingDirectory)/webapp/pom.xml'
                    goals: deploy
                    publishJUnitResults: false
                    javaHomeOption: JDKVersion
                    jdkVersionOption: 1.11
                    jdkArchitectureOption: 'x64'
                    mavenOptions: '-Xmx3072m'
                    mavenAuthenticateFeed: true