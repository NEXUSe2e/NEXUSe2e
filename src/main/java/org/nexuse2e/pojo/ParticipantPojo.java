/**
 * NEXUSe2e Business Messaging Open Source  
 * Copyright 2007, Tamgroup and X-ioma GmbH   
 *  
 * This is free software; you can redistribute it and/or modify it  
 * under the terms of the GNU Lesser General Public License as  
 * published by the Free Software Foundation version 2.1 of  
 * the License.  
 *  
 * This software is distributed in the hope that it will be useful,  
 * but WITHOUT ANY WARRANTY; without even the implied warranty of  
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  
 * Lesser General Public License for more details.  
 *  
 * You should have received a copy of the GNU Lesser General Public  
 * License along with this software; if not, write to the Free  
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.nexuse2e.pojo;

// Generated 20.10.2006 15:50:01 by Hibernate Tools 3.2.0.beta6a

import java.util.Date;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * ParticipantPojo generated by hbm2java
 */
@XmlType(name = "ParticipantType")
@XmlAccessorType(XmlAccessType.NONE)
public class ParticipantPojo implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -4038533703653628428L;

    // Fields    
    private int               nxParticipantId;
    private PartnerPojo       partner;
    private ChoreographyPojo  choreography;
    private PartnerPojo       localPartner;
    private ConnectionPojo    connection;
    private Date              createdDate;
    private Date              modifiedDate;
    private int               modifiedNxUserId;
    private String            description;
    private CertificatePojo   localCertificate;

    // Constructors

    /** default constructor */
    public ParticipantPojo() {

        createdDate = new Date();
        modifiedDate = createdDate;
    }

    /** minimal constructor */
    public ParticipantPojo( PartnerPojo partner, ChoreographyPojo choreography, PartnerPojo localPartner,
            ConnectionPojo connection, Date createdDate, Date modifiedDate, int modifiedNxUserId ) {

        this.partner = partner;
        this.choreography = choreography;
        this.localPartner = localPartner;
        this.connection = connection;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.modifiedNxUserId = modifiedNxUserId;
    }

    /** full constructor */
    public ParticipantPojo( PartnerPojo partner, ChoreographyPojo choreography, PartnerPojo localPartner,
            ConnectionPojo connection, Date createdDate, Date modifiedDate, int modifiedNxUserId, String description ) {

        this.partner = partner;
        this.choreography = choreography;
        this.localPartner = localPartner;
        this.connection = connection;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.modifiedNxUserId = modifiedNxUserId;
        this.description = description;
    }

    // Property accessors
    public int getNxParticipantId() {

        return this.nxParticipantId;
    }

    @XmlAttribute
    public void setNxParticipantId( int nxParticipantId ) {

        this.nxParticipantId = nxParticipantId;
    }

    /**
     * Required for JAXB 
     * @return
     */
    @XmlAttribute
    public int getPartnerId() {

        if ( this.partner != null ) {
            return this.partner.getNxPartnerId();

        }
        return 0;
    }

    public PartnerPojo getPartner() {

        return this.partner;
    }

    public void setPartner( PartnerPojo partner ) {

        this.partner = partner;
    }

    public ChoreographyPojo getChoreography() {

        return this.choreography;
    }

    public void setChoreography( ChoreographyPojo choreography ) {

        this.choreography = choreography;
    }

    /**
     * Required for JAXB 
     * @return
     */
    @XmlAttribute
    public int getLocalPartnerId() {

        if ( this.localPartner != null ) {
            return this.localPartner.getNxPartnerId();

        }
        return 0;
    }

    public PartnerPojo getLocalPartner() {

        return this.localPartner;
    }

    public void setLocalPartner( PartnerPojo localPartner ) {

        this.localPartner = localPartner;
    }

    /**
     * Required for JAXB 
     * @return
     */
    @XmlAttribute
    public int getConnectionId() {

        if ( this.connection != null ) {
            return this.connection.getNxConnectionId();

        }
        return 0;
    }

    public ConnectionPojo getConnection() {

        return this.connection;
    }

    public void setConnection( ConnectionPojo connection ) {

        this.connection = connection;
    }

    public Date getCreatedDate() {

        return this.createdDate;
    }

    public void setCreatedDate( Date createdDate ) {

        this.createdDate = createdDate;
    }

    public Date getModifiedDate() {

        return this.modifiedDate;
    }

    public void setModifiedDate( Date modifiedDate ) {

        this.modifiedDate = modifiedDate;
    }

    public int getModifiedNxUserId() {

        return this.modifiedNxUserId;
    }

    public void setModifiedNxUserId( int modifiedNxUserId ) {

        this.modifiedNxUserId = modifiedNxUserId;
    }

    @XmlAttribute
    public String getDescription() {

        return this.description;
    }

    public void setDescription( String description ) {

        this.description = description;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals( Object obj ) {

        if ( obj instanceof ParticipantPojo ) {
            if ( nxParticipantId == 0 ) {
                return super.equals( obj );
            }
            return ( this.getNxParticipantId() == ( (ParticipantPojo) obj ).getNxParticipantId() );
        }
        return false;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {

        if ( nxParticipantId == 0 ) {
            return super.hashCode();
        }

        return nxParticipantId;
    }

    /**
     * @return the localCertificate
     */
    public CertificatePojo getLocalCertificate() {

        return localCertificate;
    }

    /**
     * @param localCertificate the localCertificate to set
     */
    public void setLocalCertificate( CertificatePojo localCertificate ) {

        this.localCertificate = localCertificate;
    }

}
